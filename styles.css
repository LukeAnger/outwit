:root {
  --color1: #ffffff;
}

@import url('https://fonts.googleapis.com/css2?family=DM+Mono:wght@300;400;500&display=swap');

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'DM Mono', monospace;
}

ol {
  list-style: inside decimal;
}

ol > li, ul > li {
  margin: 0.5rem 0.75rem;
}



#app {
  width: 100vw;
  height: 100vh;
  display: grid;
  place-content: center;
  background-color: var(--color1);
}

#head {
  position: absolute;
  width: 100vw;
  border-bottom: 1px solid rgb(150, 150, 150);
}

#header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.5rem;
}

.headerContainer{
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: relative;
}

h1 {
  font-size: 3rem;
  font-weight: 700;
  color: #000000;
  text-align: center;
  margin: 1rem;
}

#infoButton {
  display: grid;
  place-content: center;
  font-size: 2rem;
  font-weight: 700;
  width: 2.5rem;
  height: 2.5rem;
  margin-right: 1rem;
  cursor: pointer;
  border: 1px solid black;
  padding: 0.5rem;
  border-radius: 50%;
  transition: 0.5s ease;
}

#infoButton:hover {
  box-shadow: 0 0 2px 2px rgb(85, 85, 85);
}

#info {
  position: absolute;
}

.infoCenter {
  display: grid;
  place-content: center;
  width: 100vw;
  height: 100svh;
}

#infoContainer {
  position: relative;
  display: grid;
  place-content: center;
  width: min(50vw, 600px);
  border: 1px solid black;
  border-radius: 0.5rem;
  background-color: #ffffffea;
  z-index: 1;
}

#infoContainer > h2 {
  text-align: center;
}

#infoContainer > button {
  position: absolute;
  border: none;
  background: none;
  font-size: 2rem;
  right: 0%;
  margin: 5px 5px 0 0;
  transition: 0.5s ease;
  cursor: pointer;
}

#infoContainer > button:hover {
  box-shadow: 0 0 2px 2px rgb(85, 85, 85);
}

#infoContainer li {
  text-indent: 0.5rem;
}


/* .testGrid > div {
  border: 1px solid black;
  width: 1.5rem;
  height: 1.5rem;
} */



.score {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.5rem;

}

.player {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.5rem;
  gap: 1rem
}

.board {
  display: grid;
  grid-template-columns: repeat(9, min(5vw, 64px));
  grid-template-rows: repeat(10, min(5vw, 64px));
}

.board > div {
  width: min(5vw, 64px);
  height: min(5vw, 64px);
  border: 1px solid black;
  display: grid;
  place-content: center;
}

/* .board > div:hover {
  background-color: #cd84e4;
} */



.tile1 {
  background-color: rgb(255, 225, 144);
}

.tile2 {
  background-color: #818beb;
}

.tile3 {
  background-color: #ff4141;
}

.highlight {
  background-color: #58db74;
}

.piece {
  width: min(3.75vw, 48px);
  height: min(3.75vw, 48px);
  border-radius: 50%;
  border: 1px solid black;
  cursor: pointer;
  transition: 0.5s ease;
}

.piece:hover {
  border-color: #58db74;
  box-shadow: 0 0 0px 3px #58db74;
}

.piece1, .piece2, .piece5, .piece6 {
  background-color: #818beb;
}

.piece2::after, .piece6::after {
  content: "";
  display: block;
  width: 50%;
  height: 50%;
  border-radius: 50%;
  background-color: #ff4141;
  transform: translate(50%, 50%);
}

.piece3, .piece4, .piece7, .piece8 {
  background-color: #ff4141;
}

.piece4::after, .piece8::after {
  content: "";
  display: block;
  width: 50%;
  height: 50%;
  border-radius: 50%;
  background-color: #818beb;
  transform: translate(50%, 50%);
}

@media screen and (min-width: 1200px) {
  #game {
    transform: translate(0px, 5%);
  }
}

@media screen and (max-width: 1200px) {
  .board {
    grid-template-columns: repeat(9, max(5vw, 52px));
    grid-template-rows: repeat(10, max(5vw, 52px));
  }

  .board > div {
    width: max(5vw, 52px);
    height: max(5vw, 52px);
  }

  .piece {
    width: max(3.75vw, 39px);
    height: max(3.75vw, 39px);
  }

  #infoContainer {
    width: calc(9 * max(5vw, 52px));
  }
}

@media screen and (max-width: 900px) {
  .board {
    grid-template-columns: repeat(9, max(6.8vw, 52px));
    grid-template-rows: repeat(10, max(6.8vw, 52px));
  }

  .board > div {
    width: max(6.8vw, 52px);
    height: max(6.8vw, 52px);
  }

  .piece {
    width: max(5.1vw, 39px);
    height: max(5.1vw, 39px);
  }

  #infoContainer {
    width: calc(9 * max(6.8vw, 52px));
  }
}

@media screen and (max-width: 600px) {
  .board {
    grid-template-columns: repeat(9, 10vw);
    grid-template-rows: repeat(10, 10vw);
  }

  .board > div {
    width: 10vw;
    height: 10vw;
  }

  .piece {
    width: 7.5vw;
    height: 7.5vw;
  }

  #infoContainer {
    width: calc(9 * 10vw);
  }
}

@media screen and (max-width: 440px) {
  #infoContainer {
    width: calc(9 * 10vw);
    top: 5%
  }
}
